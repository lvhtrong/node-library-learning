name: Deploy apps

on:
  push:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_NUXT_PROJECT_ID }}

jobs:
  detect-changed-apps:
    name: Detect Changed Apps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    outputs:
      changed_apps: ${{ steps.detect_changed_apps.outputs.changed_apps }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - run: npm ci
        name: Restore packages
      - name: Detect changed apps
        id: detect_changed_apps
        run: |
          export AFFECTED_PROJECTS=$(npx nx show projects --affected --base HEAD~1 --type app --sep=,)
          echo "Changed apps: $AFFECTED_PROJECTS" 
          echo "changed_apps=$AFFECTED_PROJECTS" >> "$GITHUB_OUTPUT"

  deploy-testing-react-router:
    name: 'Deploy testing-react-router'
    needs: detect-changed-apps
    if: ${{ contains(needs.detect-changed-apps.outputs.changed_apps, 'testing-react-router') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
        name: Restore packages
      - run: npx nx run testing-react-router:build
        name: Build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        name: Deploy
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_REACT_ROUTER_TESTING }}"
          projectId: testing-react-router-5fbda
          channelId: live
          entryPoint: apps/testing-react-router

  deploy-next:
    name: 'Deploy testing-next'
    needs: detect-changed-apps
    if: ${{ contains(needs.detect-changed-apps.outputs.changed_apps, 'testing-next') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
        name: Restore packages
      - run: npx nx run testing-next:build
        name: Build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        name: Deploy
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_REACT_ROUTER_TESTING }}"
          projectId: testing-react-router-5fbda
          channelId: live
          entryPoint: apps/testing-next

  deploy-nuxt:
    name: 'Deploy testing-nuxt'
    needs: detect-changed-apps
    if: ${{ contains(needs.detect-changed-apps.outputs.changed_apps, 'testing-nuxt') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
        name: Restore packages
      - name: Pull Vercel Environment Information
        run: npx vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: npx nx run testing-nuxt:build
      - name: Deploy Project Artifacts to Vercel
        run: npx vercel apps/testing-nuxt --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
